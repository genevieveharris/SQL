The following project utilizes data from a dataset called chinook, which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.

--Who were the top 3 purchased artists in Germany in 2010?

SELECT artists.name, customers.country, invoices.invoicedate, SUM(invoice_items.Quantity) AS tracks_sold
FROM artists
LEFT JOIN albums
ON artists.artistid=albums.artistid
LEFT JOIN tracks
ON albums.albumid=tracks.albumid
LEFT JOIN invoice_items
ON tracks.trackid=invoice_items.trackid
LEFT JOIN invoices
ON invoice_items.invoiceid=invoices.invoiceid
LEFT JOIN customers
ON invoices.customerid=customers.customerid
WHERE customers.country LIKE 'Germany'
AND invoices.invoicedate LIKE '2010%'
GROUP BY artists.name
ORDER BY tracks_sold DESC
LIMIT 3; 

--List how many sales each genre had in 2011 and 2012.

SELECT genres.genreid, genres.name, SUM(invoice_items.Quantity) AS tracks_sold
FROM genres
LEFT JOIN tracks
ON genres.genreid=tracks.genreid
LEFT JOIN invoice_items
ON tracks.trackid=invoice_items.trackid
LEFT JOIN(SELECT * FROM invoices 
  WHERE invoicedate LIKE '2011%' OR invoicedate LIKE '2012%')
  AS filtered_invoices
ON invoice_items.invoiceid=filtered_invoices.invoiceid
GROUP BY genres.name
ORDER BY genres.genreid; 

--How much revenue did customers who are assigned to sales support agent Margaret Park generate each year?

SELECT strftime('%Y', invoices.InvoiceDate) AS invoice_year, SUM(invoices.Total) AS total_per_year
FROM invoices
JOIN customers
ON invoices.CustomerId=customers.customerid
JOIN employees
ON customers.supportrepid=employees.employeeid
WHERE employees.EmployeeId = 4
AND invoice_year BETWEEN '2009' AND '2013'
GROUP BY invoice_year
ORDER BY invoice_year;

--Find a unique/distinct list of billing countries from the Invoice table.

SELECT distinct invoices.billingcountry
FROM invoices;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT tracks.name, albums.title, media_types.name, genres.Name
FROM tracks
LEFT JOIN albums
ON tracks.albumid=albums.albumid
LEFT JOIN media_types
ON tracks.mediatypeid=media_types.mediatypeid
LEFT JOIN genres
ON tracks.genreid=genres.genreid;

--Which albums were the most popular in France?

SELECT albums.title, COUNT(invoice_items.invoicelineid) AS Amt_Sold
FROM albums
JOIN tracks
ON albums.albumid=tracks.albumid
JOIN invoice_items
ON tracks.trackid=invoice_items.trackid
JOIN invoices
ON invoice_items.invoiceid=invoices.invoiceid
WHERE invoices.billingcountry = 'France'
GROUP BY albums.albumid
ORDER BY Amt_Sold DESC
LIMIT 10;

--Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT customers.lastname, customers.firstname, customers.customerid, customers.country
FROM customers
WHERE customers.country <> 'USA'
ORDER BY customers.lastname;

--Show only the Customers from Brazil.

SELECT customers.lastname, customers.FirstName
FROM customers
WHERE customers.country='Brazil'
ORDER BY customers.lastname;

--Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT customers.lastname, customers.FirstName, invoices.invoiceid,invoices.invoicedate, invoices.billingcountry
FROM customers
JOIN invoices
ON customers.customerid=invoices.customerid
WHERE customers.country='Brazil'
ORDER BY customers.lastname, invoices.invoicedate;

--Show the Employees who are Sales Agents.

SELECT employees.lastname, employees.firstname, employees.title
FROM employees
WHERE employees.title='Sales Support Agent'
ORDER BY employees.lastname;

--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT employees.lastname, employees.firstname, invoices.invoiceid
FROM employees
JOIN customers
ON employees.employeeid=customers.supportrepid
JOIN invoices
ON customers.customerid=invoices.customerid
ORDER BY employees.lastname, invoices.invoiceid;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers

SELECT customers.lastname, customers.firstname, customers.country, invoices.total, employees.lastname AS Agent_Last, employees.FirstName AS Agent_First
FROM invoices
JOIN customers
ON invoices.customerid=customers.customerid
JOIN employees
ON customers.supportrepid=employees.employeeid
ORDER BY customers.lastname, invoices.total;

--How many Invoices were there in 2009?

SELECT COUNT(invoices.invoiceid)
FROM invoices
WHERE invoices.invoicedate LIKE '2009%';

--What are the total sales for 2009?

SELECT SUM(invoices.total)
FROM invoices
WHERE invoices.invoicedate LIKE '2009%';

--Write a query that includes the purchased track name with each invoice line ID.

SELECT invoice_items.invoicelineid, tracks.name
FROM tracks
JOIN invoice_items
ON tracks.trackid=invoice_items.trackid
ORDER BY invoice_items.invoicelineid;

--Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT invoice_items.invoicelineid, tracks.name AS Track, artists.name AS Artist
FROM tracks
JOIN invoice_items
ON tracks.trackid=invoice_items.trackid
JOIN albums
ON tracks.albumid=albums.albumid
JOIN artists
ON albums.artistid=artists.artistid
ORDER BY invoice_items.invoicelineid;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT tracks.name AS Track, albums.title AS Album, media_types.name AS Media_Type, genres.name AS Genre
FROM tracks
JOIN albums
ON tracks.albumid=albums.albumid
JOIN media_types
ON tracks.mediatypeid=media_types.mediatypeid
JOIN genres
ON tracks.genreid=genres.genreid
ORDER BY tracks.name;

--Show the total sales made by each sales agent.

SELECT employees.lastname, employees.firstname, SUM(invoices.total) AS Total_Sales
FROM employees
JOIN customers
ON employees.employeeid=customers.SupportRepId
JOIN invoices
ON customers.customerid=invoices.customerid
GROUP BY employees.LastName, employees.FirstName
ORDER BY employees.lastname;

--Which sales agent made the most dollars in sales in 2009?

SELECT employees.lastname, employees.firstname, SUM(invoices.total) AS Total_Sales
FROM employees
JOIN customers
ON employees.employeeid=customers.SupportRepId
JOIN invoices
ON customers.customerid=invoices.customerid
GROUP BY employees.LastName, employees.FirstName
ORDER BY SUM (invoices.total) desc
LIMIT 1;

--Which tracks have the highest sales revenue?

SELECT tracks.name, SUM(invoice_items.unitprice*quantity) AS Revenue
FROM tracks
JOIN invoice_items
ON tracks.trackid=invoice_items.trackid
GROUP BY tracks.name
ORDER BY SUM(invoice_items.unitprice*quantity) desc
LIMIT 20;

